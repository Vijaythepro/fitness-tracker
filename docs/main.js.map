{"version":3,"sources":["./src/app/training/current-training/current-training.component.ts","./src/app/training/current-training/current-training.component.html","./src/app/auth/auth-routing.module.ts","./src/app/training/new-training/new-training.component.html","./src/app/training/new-training/new-training.component.ts","./src/app/navigation/side-nav/side-nav.component.ts","./src/app/navigation/side-nav/side-nav.component.html","./src/environments/environment.ts","./src/app/training/training.module.ts","./src/app/training/current-training/stop-training.component.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/auth/auth-guard.ts","./src/app/auth/sign-up/sign-up.component.html","./src/app/auth/sign-up/sign-up.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/training/training.component.html","./src/app/training/training.component.ts","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/auth/login/login.component.html","./src/app/auth/login/login.component.ts","./src/app/material/material.module.ts","./src/app/training/past-training/past-training.component.ts","./src/app/training/past-training/past-training.component.html","./src/app/auth/auth.service.ts","./src/app/navigation/header/header.component.ts","./src/app/navigation/header/header.component.html","./src/app/training/training.service.ts","./src/app/app-routing.module.ts","./src/app/shared/ui.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/training/training-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;;;;;;AAO3D,MAAM,wBAAwB;IAKnC,YAAoB,MAAiB,EAAU,eAAgC;QAA3D,WAAM,GAAN,MAAM,CAAW;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAH/E,aAAQ,GAAG,CAAC,CAAC;IAGsE,CAAC;IAEpF,QAAQ;QACN,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,KAAK;QACH,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC;QACtE,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,GAAG,EAAE;YACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClC,IAAI,IAAI,CAAC,QAAQ,IAAI,GAAG,EAAE;gBACxB,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC;gBACzC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC;aAClC;QACH,CAAC,EAAE,IAAI,CAAC;IAEV,CAAC;IAED,MAAM;QACJ,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAClC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8EAAqB,EAAE;YACxD,IAAI,EAAE;gBACJ,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAC/B,MAAM,CAAC,EAAE;YACP,IAAI,MAAM,EAAE;gBACX,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACpD;iBAAM;gBACL,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;QACH,CAAC,CACF,CAAC;IAEJ,CAAC;;gGAzCU,wBAAwB;wGAAxB,wBAAwB;QCVrC,6EAAyB;QACtB,4EAAiE;QACjE,qEAAI;QAAA,uDAAc;QAAA,4DAAK;QACvB,oEAAG;QAAA,6FAAkC;QAAA,4DAAI;QACzC,4EAA4D;QAAnB,gJAAS,YAAQ,IAAC;QAAC,+DAAI;QAAA,4DAAS;QAC5E,4DAAU;;QAJyB,0DAAkB;QAAlB,+EAAkB;QAC9C,0DAAc;QAAd,wFAAc;;;;;;;;;;;;;;;;;;;;;;;;;;ACFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACK;AACP;;;AAGvD,MAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,0EAAe,EAAC;IAC7C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;CAC9C,CAAC;AAWM,MAAM,iBAAiB;;kFAAjB,iBAAiB;gGAAjB,iBAAiB;oGARlB;YACL,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAChC,EAEG,4DAAY;mIAIN,iBAAiB,uFAJvB,4DAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICRJ,gFAA8E;IAAA,uDAAiB;IAAA,4DAAa;;;IAArD,iFAAqB;IAAE,0DAAiB;IAAjB,iFAAiB;;;IAJ3G,mFAAmC;IAC/B,oFAAkC;IAC9B,4EAAW;IAAA,iEAAM;IAAA,4DAAY;IAC7B,mFAAsC;IAClC,iJAA4G;IAChH,4DAAa;IACjB,4DAAiB;IACrB,4DAAmB;;;IAH0B,0DAAoB;IAApB,6FAAoB;;;IAIjE,4EAAgE;;;;IAChE,mFAAmC;IAC/B,4EAA8C;IAApB,mUAAmB;IAAC,gEAAK;IAAA,4DAAS;IAChE,4DAAmB;;ACAhB,MAAM,oBAAoB;IAS/B,YAAoB,eAAgC,EAChC,EAAoB,EACpB,SAAoB;QAFpB,oBAAe,GAAf,eAAe,CAAiB;QAChC,OAAE,GAAF,EAAE,CAAkB;QACpB,cAAS,GAAT,SAAS,CAAW;QATvC,sBAAiB,GAAqB,EAAE,CAAC;QAGzC,WAAM,GAAG,KAAK,CAAC;IAM4B,CAAC;IAE7C,QAAQ;QACN,IAAI,CAAC,mBAAmB,GAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YAC3E,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QAC1B,CAAC,CAAC;QACF,gDAAgD;QACjD,uFAAuF;QAEpF,0CAA0C;QAC1C,gCAAgC;QAEnC,MAAM;QACL,0BAA0B;QAC1B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC;IACnE,CAAC;IAED,OAAO;QACL,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACzE,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,oBAAoB,EAAE;YAC5B,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;SACzC;QACD,IAAG,IAAI,CAAC,mBAAmB,EAAE;YAC3B,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;SACxC;IACH,CAAC;;wFAvCU,oBAAoB;oGAApB,oBAAoB;;;;;;QDdjC,6EAA0B;QAC1B,2EAAU;QACN,iFAAgB;QAAA,oFAAyB;QAAA,4DAAiB;QAC1D,0IAOmB;QACnB,gIAAgE;QAChE,0IAEmB;QACvB,4DAAW;QACX,4DAAU;;QAba,0DAAc;QAAd,6EAAc;QAQnB,0DAAa;QAAb,4EAAa;QACR,0DAAc;QAAd,6EAAc;;;;;;;;;;;;;;AEXrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;;;;;;;;;;ICA/E,uEAAgF;IAA1B,iTAAyB;IAC3E,2EAAU;IAAA,oEAAS;IAAA,4DAAW;IAC9B,uEAAM;IAAA,kEAAO;IAAA,4DAAO;IACxB,4DAAI;;;;IACJ,uEAA+E;IAA1B,iTAAyB;IAC1E,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC1B,uEAAM;IAAA,gEAAK;IAAA,4DAAO;IACtB,4DAAI;;;;IACJ,uEAAiF;IAA1B,iTAAyB;IAC5E,2EAAU;IAAA,yEAAc;IAAA,4DAAW;IACnC,uEAAM;IAAA,mEAAQ;IAAA,4DAAO;IACzB,4DAAI;;;;IACJ,gFAA8B;IAC1B,4EAA6C;IAArB,gUAAoB;IAC5B,2EAAU;IAAA,6EAAkB;IAAA,4DAAW;IACvC,uEAAM;IAAA,kEAAO;IAAA,4DAAO;IACpC,4DAAS;IACb,4DAAgB;;ADTb,MAAM,gBAAgB;IAK3B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAHlC,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC5C,WAAM,GAAG,KAAK,CAAC;IAEiC,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,GAAE;YACnE,IAAI,CAAC,MAAM,GAAG,GAAG;QACnB,CAAC,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;IACxC,CAAC;;gFAxBU,gBAAgB;gGAAhB,gBAAgB;QCT7B,+EAAc;QACV,wGAGI;QACJ,wGAGI;QACJ,wGAGI;QACJ,gIAKgB;QAEpB,4DAAe;;QAnBP,0DAAa;QAAb,6EAAa;QAIb,0DAAa;QAAb,6EAAa;QAIb,0DAAY;QAAZ,4EAAY;QAIA,0DAAY;QAAZ,4EAAY;;;;;;;;;;;;;;ACbhC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,cAAc,EAAE;QACd,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,uCAAuC;QACnD,SAAS,EAAE,uBAAuB;QAClC,aAAa,EAAE,mCAAmC;QAClD,iBAAiB,EAAE,cAAc;QACjC,KAAK,EAAE,2CAA2C;QAClD,aAAa,EAAE,cAAc;KAC5B;CACJ,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACxBnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;AACiB;AACpB;AAChB;AACU;AACgC;AACZ;AACG;;AAmBzE,MAAM,cAAc;;4EAAd,cAAc;6FAAd,cAAc;iGARd;YACL,4DAAY;YACZ,wEAAc;YACd,8EAAqB;SACxB;mIAIQ,cAAc,mBAdnB,4FAAqB;QACrB,yFAAoB;QACpB,qGAAwB;QACxB,qEAAiB;QACjB,+FAAqB,aAGrB,4DAAY;QACZ,wEAAc;QACd,8EAAqB;;;;;;;;;;;;;ACpB7B;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;AAYlD,MAAM,qBAAqB;IAE9B,YAA4C,WAAgB;QAAhB,gBAAW,GAAX,WAAW,CAAK;IAAI,CAAC;;0FAFxD,qBAAqB,kEAEV,wEAAe;qGAF1B,qBAAqB;QARnB,wEAAqB;QAAC,0EAAc;QAAA,4DAAK;QACxC,qFAAoB;QAAC,uDAA0C;QAAA,4DAAqB;QACpF,qFAAoB;QACpB,4EAA+C;QAAA,8DAAG;QAAA,4DAAS;QAC3D,4EAA+C;QAAA,6DAAE;QAAA,4DAAS;QAC1D,4DAAqB;;QAJA,0DAA0C;QAA1C,qHAA0C;QAE5C,0DAA0B;QAA1B,kFAA0B;QAC1B,0DAA2B;QAA3B,mFAA2B;;;;;;;;;;;;;;;;;;ACFvD,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,yEAAqB;QACnB,6EAA8B;QAC5B,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QACjB,oEAAG;QAAA,4GAAiD;QAAA,4DAAI;QAC1D,4DAAU;QACV,0EAAS;QACP,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,oEAAG;QAAA,4GAAgD;QAAA,4DAAI;QACzD,4DAAU;QACV,2EAAS;QACP,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,qEAAG;QAAA,0GAA8C;QAAA,4DAAI;QACvD,4DAAU;QACZ,4DAAM;;;;;;;;;;;;;;;;;;;;;;ACJC,MAAM,SAAS;IAClB,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAExE,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACjE,IAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE;YAC3B,OAAO,IAAI,CAAC;SACf;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACpC;IACL,CAAC;;kEATQ,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAHN,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICAd,4EAAoD;IAAA,8EAAmB;IAAA,4DAAY;;;IACnF,4EAAmD;IAAA,kFAAuB;IAAA,4DAAY;;;IAuBzF,6EAAgG;IAAA,iEAAM;IAAA,4DAAS;;;;IAAtC,iFAAsB;;;IAC/F,yEAA2C;;ACpBzC,MAAM,eAAe;IAK1B,YAAoB,WAAwB,EAClC,SAAoB;QADV,gBAAW,GAAX,WAAW,CAAa;QAClC,cAAS,GAAT,SAAS,CAAW;QAJ9B,SAAI,GAAG,IAAI,CAAC;QACZ,WAAM,GAAG,KAAK,CAAC;IAGmB,CAAC;IAEnC,QAAQ;QACN,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YAC1E,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,CAAS;QACpB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;YAC5B,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK;YACpB,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ;SAC3B,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,mBAAmB,EAAE;YACzB,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;SAC1C;IACH,CAAC;;8EAzBU,eAAe;+FAAf,eAAe;;QDX5B,6EAA4D;QAA7B,uRAAY,qBAAe,IAAC;QACvD,oFAA6D;QACzD,4EAAW;QAAA,gEAAK;QAAA,4DAAY;QAC5B,yEAEoC;QACpC,uHAAmF;QACnF,uHAAsF;QACzF,4DAAiB;QAEhB,oFAAyF;QACvF,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,0EAEsC;QACtC,6EAAwH;QAAtF,gKAAsB;QACxD,4EAAU;QAAA,wDAA0C;QAAA,4DAAW;QAC/D,4DAAS;QACT,gFAAsB;QAAA,wDAAsC;QAAA,4DAAW;QACvE,6EAAW;QAAA,0FAA8B;QAAA,4DAAY;QACxD,4DAAiB;QAEjB,sFAAkC;QAC/B,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,wEAA2E;QAC3E,wFAAwE;QACxE,uFAAyC;QAC7C,4DAAiB;QAEhB,oFAA6C;QAAA,2FAA+B;QAAA,4DAAe;QAC3F,oHAA+G;QAC/G,6HAA2C;QAChD,4DAAO;;;;;QA1Ba,0DAAsC;QAAtC,2FAAsC;QACtC,0DAAqC;QAArC,0FAAqC;QAKL,0DAAmC;QAAnC,gGAAmC;QAGtB,0DAAmC;QAAnC,wFAAmC;QAClF,0DAA0C;QAA1C,2GAA0C;QAE9B,0DAAsC;QAAtC,8HAAsC;QAM5C,0DAAwB;QAAxB,8EAAwB;QACP,0DAAc;QAAd,oEAAc;QAKzC,0DAAc;QAAd,6EAAc;QACT,0DAAa;QAAb,4EAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEvBzB,MAAM,YAAY;IAGvB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,UAAK,GAAG,iBAAiB,CAAC;IAEqB,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;;wEAPU,YAAY;4FAAZ,YAAY;;QCRzB,0FAA6D;QAC3D,sFAAqB;QACf,kFAA+C;QAAjC,oSAAgB,YAAe,IAAC;QAAC,4DAAe;QACpE,4DAAa;QACb,qFAAoB;QACd,gFAA0C;QAA9B,4RAAa,YAAe,IAAC;QAAC,4DAAa;QAC3D,2EAA+B;QACjC,4DAAqB;QACvB,4DAAuB;;QARiB,6EAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICA5D,gFAAwC;IACtC,6EAA+B;IAC7B,8EAAwC;IACzC,4DAAU;IACX,6EAA+B;IAC7B,+EAAuC;IACzC,4DAAU;IACZ,4DAAgB;;;IAChB,kFAAqE;;ACC9D,MAAM,iBAAiB;IAI5B,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAFpD,oBAAe,GAAG,KAAK,CAAC;IAEgC,CAAC;IAEzD,QAAQ;QACN,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,SAAS,CAChF,IAAI,CAAC,EAAE;YACL,IAAG,IAAI,EAAC;gBACN,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC7B;iBAAM;gBACL,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;aAC9B;QACH,CAAC,CACF;IACH,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,2BAA2B,EAAE;YACnC,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC;SAChD;IACH,CAAC;;kFAtBU,iBAAiB;iGAAjB,iBAAiB;QDT9B,iIAOgB;QAChB,+IAAqE;;QARrD,sFAAsB;QAQf,0DAAqB;QAArB,qFAAqB;;;;;;;;;;;;;;AER5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACb;AACE;AACgB;AACD;AACL;;AAgBlD,MAAM,UAAU;;oEAAV,UAAU;yFAAV,UAAU;6FARV;YACL,wEAAc;YACd,4DAAY;YACZ,0DAAW;YACX,sEAAiB;SACpB;mIAGQ,UAAU,mBAXf,qEAAc;QACd,0EAAe,aAGf,wEAAc;QACd,4DAAY;QACZ,0DAAW;QACX,sEAAiB;;;;;;;;;;;;;ACjBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AACZ;AAEU;AAEX;AACgC;AAClC;AACe;AACJ;AACN;AACe;AAEF;AAKQ;AACK;AAC5B;AACU;;;AAwBnD,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,2DAAY;8FADb,CAAC,6DAAS,CAAC,YAXb;YACP,uEAAa;YACb,4FAAuB;YACvB,wEAAc;YACd,oEAAgB;YAChB,0DAAW;YACX,+DAAiB,CAAC,aAAa,CAAC,sEAAW,CAAC,cAAc,CAAC;YAC3D,8EAAsB;YACtB,4DAAU;YACV,wEAAc;SACf;oIAIU,SAAS,mBAnBlB,2DAAY;QACZ,4EAAgB;QAChB,oFAAe;QACf,yFAAgB,aAGhB,uEAAa;QACb,4FAAuB;QACvB,wEAAc;QACd,oEAAgB;QAChB,0DAAW,mEAEX,8EAAsB;QACtB,4DAAU;QACV,wEAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICpCd,4EAAoD;IAAA,8EAAmB;IAAA,4DAAY;;;IACnF,4EAAmD;IAAA,kFAAuB;IAAA,4DAAY;;;IAexF,6EAA+F;IAAA,iEAAM;IAAA,4DAAS;;;;IAAtC,iFAAsB;;;IAC9F,yEAA0C;;ACVrC,MAAM,cAAc;IAKzB,YAAoB,WAAwB,EACxB,SAAoB;QADpB,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAW;QAJxC,SAAI,GAAG,IAAI,CAAC;QACZ,WAAM,GAAG,KAAK,CAAC;IAG6B,CAAC;IAE7C,QAAQ;QACP,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACzE,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,CAAS;QACpB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrB,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK;YACpB,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ;SAC3B,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,mBAAmB,EAAE;YAC3B,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;SACxC;IAEH,CAAC;;4EA1BU,cAAc;8FAAd,cAAc;;QDX3B,6EAA4D;QAA7B,sRAAY,qBAAe,IAAC;QACzD,oFAA6D;QAC3D,4EAAW;QAAA,gEAAK;QAAA,4DAAY;QAC5B,yEAAgH;QAChH,sHAAmF;QACnF,sHAAsF;QACxF,4DAAiB;QAEjB,oFAAyF;QACvF,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,0EACwD;QACxD,6EAC6B;QADK,+JAAsB;QAEtD,4EAAU;QAAA,wDAA0C;QAAA,4DAAW;QACjE,4DAAS;QACT,gFAAsB;QAAA,wDAAsC;QAAA,4DAAW;QACvE,6EAAW;QAAA,0FAA8B;QAAA,4DAAY;QACvD,4DAAiB;QAEjB,mHAA8G;QAC9G,4HAA0C;QAC5C,4DAAO;;;;QAlBS,0DAAsC;QAAtC,2FAAsC;QACtC,0DAAqC;QAArC,0FAAqC;QAKL,0DAAmC;QAAnC,gGAAmC;QAEtB,0DAAmC;QAAnC,wFAAmC;QAEhF,0DAA0C;QAA1C,2GAA0C;QAEhC,0DAAsC;QAAtC,8HAAsC;QAIrD,0DAAa;QAAb,6EAAa;QACR,0DAAY;QAAZ,4EAAY;;;;;;;;;;;;;;AEpB5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACY;AACJ;AACE;AACU;AACN;AACE;AACF;AACF;AACE;AACN;AACA;AACA;AACW;AACY;AACnB;AAEF;AACF;AACU;AACD;;AA+CzD,MAAM,cAAc;;4EAAd,cAAc;8FAAd,cAAc;kGA3ChB;YACP,4DAAY;YACZ,wEAAe;YACf,oEAAa;YACb,sEAAc;YACd,gFAAmB;YACnB,0EAAmB;YACnB,4EAAiB;YACjB,0EAAgB;YAChB,wEAAe;YACf,0EAAgB;YAChB,qEAAa;YACb,qEAAa;YACb,qEAAa;YACb,gFAAkB;YAClB,4FAAwB;YACxB,yEAAe;YACf,uEAAc;YACd,qEAAa;YACb,+EAAkB;YAClB,8EAAiB;SAClB,EACU,wEAAe;QACxB,oEAAa;QACb,sEAAc;QACd,gFAAmB;QACnB,0EAAmB;QACnB,4EAAiB;QACjB,0EAAgB;QAChB,wEAAe;QACf,0EAAgB;QAChB,qEAAa;QACb,qEAAa;QACb,qEAAa;QACb,gFAAkB;QAClB,4FAAwB;QACxB,yEAAe;QACf,uEAAc;QACd,qEAAa;QACb,+EAAkB;QAClB,8EAAiB;oIAGR,cAAc,cA1CvB,4DAAY;QACZ,wEAAe;QACf,oEAAa;QACb,sEAAc;QACd,gFAAmB;QACnB,0EAAmB;QACnB,4EAAiB;QACjB,0EAAgB;QAChB,wEAAe;QACf,0EAAgB;QAChB,qEAAa;QACb,qEAAa;QACb,qEAAa;QACb,gFAAkB;QAClB,4FAAwB;QACxB,yEAAe;QACf,uEAAc;QACd,qEAAa;QACb,+EAAkB;QAClB,8EAAiB,aAER,wEAAe;QACxB,oEAAa;QACb,sEAAc;QACd,gFAAmB;QACnB,0EAAmB;QACnB,4EAAiB;QACjB,0EAAgB;QAChB,wEAAe;QACf,0EAAgB;QAChB,qEAAa;QACb,qEAAa;QACb,qEAAa;QACb,gFAAkB;QAClB,4FAAwB;QACxB,yEAAe;QACf,uEAAc;QACd,qEAAa;QACb,+EAAkB;QAClB,8EAAiB;;;;;;;;;;;;;AC7DrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACM;AACF;;;;;;;;;;ICE/C,yEAAsD;IAAC,iEAAK;IAAA,4DAAK;;;IACjE,yEAAuC;IAAC,uDAAwB;;IAAA,4DAAK;;;IAA7B,0DAAwB;IAAxB,6JAAwB;;;IAIhE,yEAAsD;IAAC,iEAAK;IAAA,4DAAK;;;IACjE,yEAAuC;IAAC,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,4FAAiB;;;IAIzD,yEAAsD;IAAC,qEAAS;IAAA,4DAAK;;;IACrE,yEAAuC;IAAC,uDAA8B;;IAAA,4DAAK;;;IAAnC,0DAA8B;IAA9B,iKAA8B;;;IAItE,yEAAsD;IAAC,qEAAS;IAAA,4DAAK;;;IACrE,yEAAuC;IAAC,uDAA8B;;IAAA,4DAAK;;;IAAnC,0DAA8B;IAA9B,iKAA8B;;;IAItE,yEAAsD;IAAC,kEAAM;IAAA,4DAAK;;;IAClE,yEAAuC;IAAC,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,8FAAmB;;;IAG/D,oEAA4D;;;IAC5D,oEAAkE;;;ADpBnE,MAAM,qBAAqB;IAQhC,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QANpD,qBAAgB,GAAa,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QAChF,eAAU,GAAG,IAAI,0EAAkB,EAAkB,CAAC;IAKE,CAAC;IAEzD,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,CAAC;QAC5C,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,GAAE;YAClF,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC;IAEJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC9C,CAAC;IAED,QAAQ,CAAC,WAAmB;QAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;IACvC,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,yBAAyB,EAAE;YACjC,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC;SAC9C;IACH,CAAC;;0FA/BU,qBAAqB;qGAArB,qBAAqB;kEAIrB,8DAAO;kEACP,wEAAY;;;;;;QClBzB,yEAAuD;QACnD,iFAAgB;QACZ,2EAAyF;QAA7D,kJAAS,iCAA6B,IAAC;QAAnE,4DAAyF;QAC7F,4DAAiB;QACrB,4DAAM;QACN,sEAAK;QACD,2EAA4E;QACxE,2EAAkC;QAC9B,+GAAiE;QACjE,+GAAqE;QACzE,qEAAe;QAEf,2EAAkC;QAC9B,+GAAiE;QACjE,iHAA8D;QAClE,qEAAe;QAEf,4EAAsC;QAClC,iHAAqE;QACrE,iHAA2E;QAC/E,qEAAe;QAEf,4EAAsC;QAClC,iHAAqE;QACrE,iHAA2E;QAC/E,qEAAe;QAEf,4EAAoC;QAChC,iHAAkE;QAClE,iHAAgE;QACpE,qEAAe;QAEf,kHAA4D;QAC5D,kHAAkE;QACtE,4DAAQ;QACR,gFACgB;QACpB,4DAAM;;QA/Be,0DAAyB;QAAzB,sFAAyB;QA0BlB,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAEhD,0DAA+B;QAA/B,kJAA+B;;;;;;;;;;;;;;AC7BlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;AAI/B,6DAA6D;AAMtD,MAAM,WAAW;IAIpB,YAAoB,MAAc,EACtB,MAAuB,EACvB,cAA+B,EAC/B,QAAqB,EACrB,SAAoB;QAJZ,WAAM,GAAN,MAAM,CAAQ;QACtB,WAAM,GAAN,MAAM,CAAiB;QACvB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,aAAQ,GAAR,QAAQ,CAAa;QACrB,cAAS,GAAT,SAAS,CAAW;QANhC,eAAU,GAAG,IAAI,4CAAO,EAAW,CAAC;IAMA,CAAC;IAErC,YAAY,CAAC,QAAkB;QAC3B,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,8BAA8B,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC;aACxE,IAAI,CAAC,MAAM,CAAC,EAAE;YACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7C,CAAC,CAAC;aACD,KAAK,CAAC,KAAK,CAAC,EAAE;YACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAC/D,CAAC,CAAC;IAEV,CAAC;IAED,KAAK,CAAC,QAAkB;QACpB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,0BAA0B,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC;aACpE,IAAI,CAAC,MAAM,CAAC,EAAE;YACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7C,CAAC,CAAC;aACD,KAAK,CAAC,KAAK,CAAC,EAAE;YACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAC/D,CAAC,CAAC;IAEV,CAAC;IAED,MAAM;QACF,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;QACxC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,OAAO;QACH,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,MAAM;QACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACxC,IAAG,QAAQ,EAAC;gBACR,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aAC3B;iBAAM;gBACH,OAAO,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;aAC5B;QACJ,CAAC,CAAC;IACN,CAAC;;sEAlEQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAHR,MAAM;;;;;;;;;;;;;ACZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;;;;;;;;;ICOvE,qEAAoB;IAAA,uEAAwB;IAAA,kEAAO;IAAA,4DAAI;IAAA,4DAAK;;;IAC5D,qEAAoB;IAAA,uEAAuB;IAAA,gEAAK;IAAA,4DAAI;IAAA,4DAAK;;;IACzD,qEAAmB;IAAA,uEAA0B;IAAA,mEAAQ;IAAA,4DAAI;IAAA,4DAAK;;;;IAC9D,qEAAmB;IAAA,uEAAgD;IAArB,6SAAoB;IAAC,kEAAO;IAAA,4DAAI;IAAA,4DAAK;;ADFxF,MAAM,eAAe;IAM1B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJlC,cAAS,GAAG,IAAI,0DAAY,EAAE,CAAC;QACzC,WAAM,GAAG,KAAK,CAAC;IAGiC,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;IACxC,CAAC;;8EAxBU,eAAe;+FAAf,eAAe;QCT1B,iFAA6B;QAC3B,4EAAkG;QAAzE,uIAAS,mBAAe,IAAC;QAChD,2EAAW;QAAA,+DAAI;QAAA,4DAAW;QAC5B,4DAAS;QACT,uEAAM;QAAC,uEAAkB;QAAA,0EAAe;QAAA,4DAAI;QAAA,4DAAO;QACnD,qEAAoC;QACpC,sEAAK;QACF,qEAAI;QACC,2GAA4D;QAC5D,2GAAyD;QACzD,2GAA8D;QAC9D,2GAAmF;QACzF,4DAAK;QACT,4DAAM;QACN,4DAAc;;QANC,2DAAa;QAAb,6EAAa;QACb,0DAAa;QAAb,6EAAa;QACb,0DAAY;QAAZ,4EAAY;QACZ,0DAAY;QAAZ,4EAAY;;;;;;;;;;;;;;ACP7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACR;;;;AAK9B,MAAM,eAAe;IAe1B,YAAoB,EAAoB,EAAU,SAAoB;QAAlD,OAAE,GAAF,EAAE,CAAkB;QAAU,cAAS,GAAT,SAAS,CAAW;QAbtE,qBAAgB,GAAG,IAAI,4CAAO,EAAkB,CAAC;QACjD,oBAAe,GAAG,IAAI,4CAAO,EAAoB,CAAC;QAClD,uCAAuC;QACvC,kBAAa,GAAG,IAAI,4CAAO,EAAoB,CAAC;QAEhD,mBAAc,GAAG,EAAE,CAAC;QACrB,6CAA6C;QAC5C,uBAAkB,GAAG,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;YACrF,EAAE,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE;YACrE,EAAE,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE;YACvE,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;IAGY,CAAC;IAE3E,sBAAsB;QACpB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;aAC7B,UAAU,CAAC,oBAAoB,CAAC;aAChC,eAAe,EAAE;aACjB,IAAI,CACL,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACb,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBACxB,MAAM,IAAI,GAAQ,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBACzC,OAAO;oBACL,EAAE,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBACtB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC;oBAC3B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC;iBAC5B;YACH,CAAC,CAAC;QACJ,CAAC,CAAC,CACD,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YACvB,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;YACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACtC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,oBAAoB,CAAC,UAAkB;QACrC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC;QACjF,IAAI,CAAC,gBAAgB,CAAC,IAAI,mBAAM,IAAI,CAAC,aAAa,EAAG,CAAC;IACxD,CAAC;IAED,eAAe,CAAC,QAAQ;QACtB,IAAI,CAAC,iBAAiB,iCAEf,IAAI,CAAC,aAAa,KACrB,MAAM,EAAE,WAAW,EACnB,IAAI,EAAE,IAAI,IAAI,EAAE,EAChB,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,EACxD,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,IACxD;QACJ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,IAAI;IAC3B,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,iBAAiB,iCAEf,IAAI,CAAC,aAAa,KACrB,MAAM,EAAE,WAAW,EACnB,IAAI,EAAE,IAAI,IAAI,EAAE,IAChB;QACJ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,IAAI;IAC3B,CAAC;IAEO,iBAAiB,CAAC,SAAyB;QACjD,MAAM,IAAI,mCACL,SAAS,KACZ,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,GACnC,CAAC;QACF,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,YAAY,EAAE;aAC7E,SAAS,CAAC,CAAC,GAAqB,EAAE,EAAE;YACnC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACpC,OAAO,CAAC,WAAW,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;;8EAzFU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;ACPpB;AAAA;AAAA;AAAA;AAAA;AAAuD;AAIQ;;;AAI/D,MAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,2EAAgB,EAAC;IACxC,cAAc;IACd,8FAA8F;IAC9F,uBAAuB;IACvB,OAAO;CACV;AAOM,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAJhB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAGb,gBAAgB,uFAHf,4DAAY;;;;;;;;;;;;;ACnB1B;AAAA;AAAA;AAA+B;AAExB,MAAM,SAAS;IAAtB;QACI,kBAAa,GAAG,IAAI,4CAAO,EAAW,CAAC;IAC3C,CAAC;CAAA;;;;;;;;;;;;;;;;;;;ACJ8C;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACQ;AACF;;;AAGvD,MAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,qEAAiB,EAAE,WAAW,EAAE,CAAC,0DAAS,CAAC,EAAE;CAC/E,CAAC;AAUK,MAAM,qBAAqB;;0FAArB,qBAAqB;oGAArB,qBAAqB;yGAHnB,CAAC,0DAAS,CAAC,YAJb;YACL,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAChC,EACS,4DAAY;mIAIb,qBAAqB,uFAJpB,4DAAY","file":"main.js","sourcesContent":["import { TrainingService } from './../training.service';\nimport { Component, OnInit} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { StopTrainingComponent } from './stop-training.component';\n\n@Component({\n  selector: 'app-current-training',\n  templateUrl: './current-training.component.html',\n  styleUrls: ['./current-training.component.scss']\n})\nexport class CurrentTrainingComponent implements OnInit {\n\n  progress = 0;\n  progressLevel: number;\n\n  constructor(private dailog: MatDialog, private trainingService: TrainingService) { }\n\n  ngOnInit(): void {\n    this.timer();\n  }\n\n  timer() {\n    const step = this.trainingService.findExcercise.duration / 100 * 1000;\n    this.progressLevel = setInterval(() => {\n      this.progress = this.progress + 1;\n      if (this.progress >= 100) {\n        this.trainingService.compeletExcercise();\n        clearInterval(this.progressLevel)\n      }\n    }, step)\n\n  }\n\n  onStop() {\n    clearInterval(this.progressLevel);\n    const dailogRef = this.dailog.open(StopTrainingComponent, {\n      data: {\n        progress: this.progress\n      }\n    });\n\n    dailogRef.afterClosed().subscribe(\n      result => {\n        if (result) {\n         this.trainingService.cancelExcercise(this.progress);\n        } else {\n          this.timer();\n        }\n      }\n    );\n\n  }\n\n}\n","<section class=\"spinner\">\n   <mat-spinner mode=\"determinate\" [value]=\"progress\"></mat-spinner>\n   <h1>{{progress}} %</h1>\n   <p>keep on going, you can do it buddy</p>\n   <button mat-raised-button color=\"accent\" (click)=\"onStop()\">stop</button>\n</section>\n","import { LoginComponent } from './login/login.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [\r\n    { path: 'signup', component: SignUpComponent},\r\n    { path: 'login', component: LoginComponent}\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n })\r\n\r\n export class AuthRoutingModule { }","<section class=\"new-card\">    \n<mat-card>\n    <mat-card-title>Time to start a workout!!</mat-card-title>\n    <mat-card-content *ngIf =\"!loader\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Select</mat-label>\n            <mat-select #currentTraining required>\n                <mat-option *ngFor=\"let training of trainingAvailable\" [value]=\"training.id\" >{{training.name}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n    </mat-card-content>\n    <mat-spinner *ngIf =\"loader\" style=\"margin: auto\"></mat-spinner>\n    <mat-card-actions *ngIf =\"!loader\">\n        <button mat-raised-button (click)=\"onStart()\">start</button>\n    </mat-card-actions>\n</mat-card>\n</section>","import { UiService } from './../../shared/ui.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireModule } from '@angular/fire';\nimport { ExcerciseModel } from './../excercise.model';\nimport { TrainingService } from './../training.service';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-new-training',\n  templateUrl: './new-training.component.html',\n  styleUrls: ['./new-training.component.scss']\n})\nexport class NewTrainingComponent implements OnInit, OnDestroy {\n\n   trainingAvailable: ExcerciseModel[] = [];\n   trainingSubscription: Subscription;\n   loadingSubscription: Subscription;\n   loader = false;\n   //trainingAvailable: Observable<ExcerciseModel[]>;\n  @ViewChild('currentTraining') currentExcercise;\n\n  constructor(private trainingService: TrainingService,\n              private db: AngularFirestore,\n              private uiService: UiService) { }\n\n  ngOnInit(): void {\n    this.loadingSubscription =this.uiService.loadingChange.subscribe(isLoading => {\n      this.loader = isLoading;\n    })\n    //this.trainingService.fetchAvailableExcercie();\n   // this.trainingSubscription = this.trainingService.updateExcercise.subscribe(data => {\n\n      //fix firestore , now im doing with mockup\n      //this.trainingAvailable = data;\n      \n   // });\n    //this line is mockup data\n    this.trainingAvailable = this.trainingService.availableExcercise;\n  }\n\n  onStart() {\n    this.trainingService.getSelectedExcercise(this.currentExcercise.value);\n  }\n\n  ngOnDestroy() {\n    if(this.trainingSubscription) {\n      this.trainingSubscription.unsubscribe();\n    }\n    if(this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe();\n    }    \n  }\n  \n}\n","import { AuthService } from './../../auth/auth.service';\nimport { Component, OnInit, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss']\n})\nexport class SideNavComponent implements OnInit, OnDestroy {\n\n  @Output() sideNavClick = new EventEmitter();\n  isAuth = false; \n  isAuthSubscription: Subscription;\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.isAuthSubscription = this.authService.authChange.subscribe(res=> {\n      this.isAuth = res\n    })\n  }\n\n  onToggleClick() {\n    this.sideNavClick.emit();\n  }\n\n  onLogout() {\n    this.onToggleClick();\n    this.authService.logOut();\n  }\n\n  ngOnDestroy() {\n    this.isAuthSubscription.unsubscribe();\n  }\n\n}\n","<mat-nav-list>\n    <a *ngIf=\"!isAuth\" mat-list-item routerLink=\"/signup\" (click)=\"onToggleClick()\">\n        <mat-icon>group_add</mat-icon>\n        <span>sign up</span>\n    </a>\n    <a *ngIf=\"!isAuth\" mat-list-item routerLink=\"/login\" (click)=\"onToggleClick()\">\n        <mat-icon>input</mat-icon>\n        <span>login</span>\n    </a>\n    <a *ngIf=\"isAuth\" mat-list-item routerLink=\"/training\" (click)=\"onToggleClick()\">\n        <mat-icon>fitness_center</mat-icon>\n        <span>training</span>\n    </a>\n    <mat-list-item *ngIf=\"isAuth\">\n        <button mat-icon-button (click)=\"onLogout()\">\n                        <mat-icon>power_settings_new</mat-icon>\n                        <span>log out</span>\n        </button>\n    </mat-list-item>\n\n</mat-nav-list>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyBFRoibkVOnlx8oc75ZW2b5knTunXUvdTQ\",\n    authDomain: \"fitness-tracker-b6e54.firebaseapp.com\",\n    projectId: \"fitness-tracker-b6e54\",\n    storageBucket: \"fitness-tracker-b6e54.appspot.com\",\n    messagingSenderId: \"999903435031\",\n    appId: \"1:999903435031:web:66e13ab2fb35cb26467f52\",\n    measurementId: \"G-RVYYZEVPRD\"\n    }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { TrainingRoutingModule } from './training-routing.module';\r\nimport { StopTrainingComponent } from './current-training/stop-training.component';\r\nimport { MaterialModule } from './../material/material.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TrainingComponent } from './training.component';\r\nimport { CurrentTrainingComponent } from './current-training/current-training.component';\r\nimport { NewTrainingComponent } from './new-training/new-training.component';\r\nimport { PastTrainingComponent } from './past-training/past-training.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        PastTrainingComponent,\r\n        NewTrainingComponent,\r\n        CurrentTrainingComponent,\r\n        TrainingComponent,\r\n        StopTrainingComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        TrainingRoutingModule\r\n    ],\r\n    entryComponents: [StopTrainingComponent]\r\n})\r\n\r\nexport class TrainingModule{ }","import { Component, Inject } from '@angular/core';\r\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-stop-training',\r\n    template: `<h1 mat-dailog-title> Are you sure? </h1>\r\n                <mat-dialog-content> You already got {{currentData.progress}} %</mat-dialog-content>\r\n                <mat-dialog-actions>\r\n                <button mat-button [mat-dialog-close] =\"true\" >Yes</button>\r\n                <button mat-button [mat-dialog-close] =\"false\">No</button>\r\n                </mat-dialog-actions>      `\r\n})\r\n\r\nexport class StopTrainingComponent {\r\n\r\n    constructor(@Inject(MAT_DIALOG_DATA) public currentData: any) { }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"welcome\">\n  <section class=\"sectionClass\">\n    <h1>ACTIVITY</h1>\n    <p>Stay active and enjoy better health and more fun!</p>\n  </section>\n  <section>\n    <h1>COMMUNITY</h1>\n    <p>Get to know other people who share your passion!</p>\n  </section>\n  <section>\n    <h1>CHALLENGES</h1>\n    <p>Never stop! Dive into new challenges every day</p>\n  </section>\n</div>","import { User } from './user.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AuthGaurd implements CanActivate {\r\n    constructor(private AuthService: AuthService, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\r\n        if(this.AuthService.getUser()) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n        }\r\n    }\r\n\r\n}","<form class=\"form\" #f=\"ngForm\" (ngSubmit)=\"onSubmitForm(f)\">\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n        <mat-label>Email</mat-label>\n        <input matInput placeholder=\"your email\"\n        type=\"email\" #emailInput=\"ngModel\" \n        ngModel name=\"email\" email required>\n        <mat-error *ngIf=\"!emailInput.hasError('required')\">Enter a valid email</mat-error>\n        <mat-error *ngIf=\"emailInput.hasError('required')\">email must not be empty</mat-error>\n     </mat-form-field>\n\n      <mat-form-field hintLabel=\"min 6 character\" class=\"example-full-width\" appearance=\"fill\">\n        <mat-label>Password</mat-label>\n        <input matInput placeholder=\"your password\" [type]=\"hide ? 'password' : 'text'\"\n        type=\"password\" ngModel name=\"password\"\n        #passwordInput required minlength=\"6\">\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n        <mat-hint align=\"end\">{{passwordInput.value?.length || 0}}/6</mat-hint>\n        <mat-error>has to be atleast 6 characters</mat-error> \n     </mat-form-field>\n\n     <mat-form-field appearance=\"fill\">\n        <mat-label>your birthdate</mat-label>\n        <input matInput [matDatepicker]=\"picker\" required name=\"birthDate\" ngModel>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n     <mat-checkbox name=\"agree\" required ngModel >I agree to terms and conditions</mat-checkbox>\n     <button *ngIf =\"!loader\" mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"f.invalid\">Submit</button>\n     <mat-spinner *ngIf =\"loader\"></mat-spinner>\n</form>\n","import { Subscription } from 'rxjs';\nimport { UiService } from './../../shared/ui.service';\nimport { AuthService } from './../auth.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n  hide = true;\n  loader = false;\n  loadingSubscription: Subscription;\n  constructor(private authService: AuthService,\n    private uiService: UiService) { }\n\n  ngOnInit(): void {\n    this.loadingSubscription = this.uiService.loadingChange.subscribe(loading => {\n      this.loader = loading;\n    });\n  }\n\n  onSubmitForm(f: NgForm) {\n    this.authService.registerUser({\n      email: f.value.email,\n      password: f.value.password\n    });\n  }\n\n  ngOnDestroy() {\n    if(this.loadingSubscription) {\n        this.loadingSubscription.unsubscribe();\n    }\n  }\n  \n}\n","import { AuthService } from './auth/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'fitness-tracker';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(){\n    this.authService.isAuth();\n  }\n}\n","<mat-drawer-container class=\"container\" [hasBackdrop]=\"true\">\n  <mat-drawer #drawer >\n        <app-side-nav (sideNavClick)=\"drawer.toggle()\"></app-side-nav>\n  </mat-drawer>\n  <mat-drawer-content>\n        <app-header (menuClick)=\"drawer.toggle()\"></app-header>\n    <router-outlet></router-outlet>\n  </mat-drawer-content>\n</mat-drawer-container>\n","<mat-tab-group *ngIf=\"!onGoingTraining\">\n  <mat-tab label=\"New Excercise\"> \n    <app-new-training >  </app-new-training>\n   </mat-tab>\n  <mat-tab label=\"Past Exercise\"> \n    <app-past-training></app-past-training>\n  </mat-tab>\n</mat-tab-group>\n<app-current-training *ngIf=\"onGoingTraining\"></app-current-training>\n","import { TrainingService } from './training.service';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-training',\n  templateUrl: './training.component.html',\n  styleUrls: ['./training.component.scss']\n})\nexport class TrainingComponent implements OnInit, OnDestroy {\n\n  onGoingTraining = false;\n  onGoingTrainingSubscription: Subscription;\n  constructor(private trainingService: TrainingService) { }\n\n  ngOnInit(): void {\n    this.onGoingTrainingSubscription = this.trainingService.excerciseChanged.subscribe(\n      data =>{\n        if(data){\n          this.onGoingTraining = true;\n        } else {\n          this.onGoingTraining = false;\n        }\n      }\n    )\n  }\n\n  ngOnDestroy() {\n    if(this.onGoingTrainingSubscription) {\n      this.onGoingTrainingSubscription.unsubscribe();\n    }\n  }\n  \n}\n","import { AuthRoutingModule } from './auth-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from './../material/material.module';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LoginComponent,\r\n        SignUpComponent\r\n    ],\r\n    imports: [\r\n        MaterialModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        AuthRoutingModule\r\n    ]\r\n})\r\n\r\nexport class AuthModule { }","import { TrainingModule } from './training/training.module';\nimport { AuthModule } from './auth/auth.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { MaterialModule } from './material/material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\n\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { TrainingComponent } from './training/training.component';\nimport { CurrentTrainingComponent } from './training/current-training/current-training.component';\nimport { NewTrainingComponent } from './training/new-training/new-training.component';\nimport { PastTrainingComponent } from './training/past-training/past-training.component';\nimport { HeaderComponent } from './navigation/header/header.component';\nimport { SideNavComponent } from './navigation/side-nav/side-nav.component';\nimport { UiService } from './shared/ui.service';\nimport { environment } from '../environments/environment';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    HeaderComponent,\n    SideNavComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    AuthModule,\n    TrainingModule\n  ],\n  providers: [UiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<form class=\"form\" #f=\"ngForm\" (ngSubmit)=\"onSubmitForm(f)\">\n  <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n    <mat-label>Email</mat-label>\n    <input matInput placeholder=\"your email\" type=\"email\" #emailInput=\"ngModel\" ngModel name=\"email\" email required>\n    <mat-error *ngIf=\"!emailInput.hasError('required')\">Enter a valid email</mat-error>\n    <mat-error *ngIf=\"emailInput.hasError('required')\">email must not be empty</mat-error>\n  </mat-form-field>\n\n  <mat-form-field hintLabel=\"min 6 character\" class=\"example-full-width\" appearance=\"fill\">\n    <mat-label>Password</mat-label>\n    <input matInput placeholder=\"your password\" [type]=\"hide ? 'password' : 'text'\" type=\"password\" ngModel\n      name=\"password\" #passwordInput required minlength=\"6\">\n    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n      [attr.aria-pressed]=\"hide\">\n      <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </button>\n    <mat-hint align=\"end\">{{passwordInput.value?.length || 0}}/6</mat-hint>\n    <mat-error>has to be atleast 6 characters</mat-error>\n  </mat-form-field>\n\n  <button *ngIf=\"!loader\" mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"f.invalid\">Submit</button>\n  <mat-spinner *ngIf=\"loader\"></mat-spinner>\n</form>","import { Subscription } from 'rxjs';\nimport { UiService } from './../../shared/ui.service';\nimport { AuthService } from './../auth.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  hide = true;\n  loader = false;\n  loadingSubscription: Subscription;\n  constructor(private authService: AuthService,\n              private uiService: UiService) { }\n\n  ngOnInit(): void {\n   this.loadingSubscription = this.uiService.loadingChange.subscribe(loading =>{\n      this.loader = loading;\n    });\n  }\n\n  onSubmitForm(f: NgForm) {\n    this.authService.login({\n      email: f.value.email,\n      password: f.value.password\n    });\n  }\n\n  ngOnDestroy() {\n    if(this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe();\n    }\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCheckboxModule,\n    MatSidenavModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatListModule,\n    MatTabsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSnackBarModule\n  ],\n  exports: [ MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCheckboxModule,\n    MatSidenavModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatListModule,\n    MatTabsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSnackBarModule\n  ]\n})\nexport class MaterialModule { }\n","import { Subscription } from 'rxjs';\nimport { ExcerciseModel } from './../excercise.model';\nimport { TrainingService } from './../training.service';\nimport { Component, OnInit, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-past-training',\n  templateUrl: './past-training.component.html',\n  styleUrls: ['./past-training.component.scss']\n})\nexport class PastTrainingComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  displayedColumns: string[] = ['date', 'name', 'duration', 'calories', 'status'];\n  dataSource = new MatTableDataSource<ExcerciseModel>();\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  pastexcerciseSubscription: Subscription;\n\n  constructor(private trainingService: TrainingService) { }\n\n  ngOnInit(): void {\n    this.trainingService.getFinishedExcercise();\n    this.pastexcerciseSubscription = this.trainingService.pastExcercise.subscribe(data=>{\n      this.dataSource.data = data;\n    })\n   \n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n     this.dataSource.paginator = this.paginator;\n  }\n\n  doFilter(filterValue: string) {\n    this.dataSource.filter = filterValue;\n  }\n\n  ngOnDestroy(){\n    if(this.pastexcerciseSubscription) {\n      this.pastexcerciseSubscription.unsubscribe();\n    }  \n  }\n\n}\n","<div style=\"text-align: center; padding: 10px 0px 5px\">\r\n    <mat-form-field>\r\n        <input matInput type=\"text\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"filter\">\r\n    </mat-form-field>\r\n</div>\r\n<div>\r\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\r\n        <ng-container matColumnDef=\"date\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.date | date}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"duration\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Duration </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.duration | number}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"calories\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Calories </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.calories | number}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> State </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" [pageSize]=\"5\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n</div>","import { UiService } from './../shared/ui.service';\r\nimport { TrainingService } from './../training/training.service';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from './user.model';\r\nimport { AuthData } from './auth-data.model';\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n//import { AngularFireAuthModule } from \"@angular/fire/auth\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n    private user: boolean;\r\n    authChange = new Subject<boolean>();\r\n\r\n    constructor(private router: Router,\r\n        private afAuth: AngularFireAuth,\r\n        private trainingServce: TrainingService,\r\n        private snackBar: MatSnackBar,\r\n        private uiService: UiService) { }\r\n\r\n    registerUser(authData: AuthData) {\r\n        this.uiService.loadingChange.next(true);\r\n        this.afAuth.createUserWithEmailAndPassword(authData.email, authData.password)\r\n            .then(result => {\r\n                this.authChange.next(true);\r\n                 this.user = true;\r\n                this.router.navigate(['/training']);\r\n                this.uiService.loadingChange.next(false);\r\n            })\r\n            .catch(error => {\r\n                this.authChange.next(false);\r\n                this.router.navigate(['/signup']);\r\n                this.uiService.loadingChange.next(false);\r\n                this.snackBar.open(error.message, null, { duration: 3000});\r\n            })\r\n\r\n    }\r\n\r\n    login(authdata: AuthData) {\r\n        this.uiService.loadingChange.next(true);\r\n        this.afAuth.signInWithEmailAndPassword(authdata.email, authdata.password)\r\n            .then(result => {\r\n                this.authChange.next(true);\r\n                this.user = true;\r\n                this.router.navigate(['/training']);\r\n                this.uiService.loadingChange.next(false);\r\n            })\r\n            .catch(error => {\r\n                this.authChange.next(false);\r\n                this.router.navigate(['/login']);\r\n                this.uiService.loadingChange.next(false);\r\n                this.snackBar.open(error.message, null, { duration: 3000});\r\n            })\r\n\r\n    }\r\n\r\n    logOut() {\r\n        this.afAuth.signOut();\r\n        this.trainingServce.cancelSubscription()\r\n        this.user = null;\r\n        this.authChange.next(false);\r\n        this.router.navigate(['/login']);\r\n    }\r\n\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    isAuth() {\r\n        this.afAuth.authState.subscribe(userData =>{\r\n           if(userData){\r\n               return this.user = true;\r\n           } else {\r\n               return this.user = false;\r\n           }\r\n        })\r\n    }\r\n}","import { AuthService } from './../../auth/auth.service';\nimport { Component, OnInit, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  @Output() menuClick = new EventEmitter();\n  isAuth = false;\n  isAuthSubscription: Subscription;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.isAuthSubscription = this.authService.authChange.subscribe(res => {\n      this.isAuth = res;\n    })\n  }\n\n  onToggleClick() {\n    this.menuClick.emit();\n  }\n\n  onLogout() {\n    this.authService.logOut();\n  }\n\n  ngOnDestroy() {\n    this.isAuthSubscription.unsubscribe();\n  }\n}\n","  <mat-toolbar color=\"primary\">\n    <button mat-icon-button  (click)=\"onToggleClick()\"aria-label=\"Example icon-button with menu icon\">\n      <mat-icon >menu</mat-icon>   \n    </button>\n    <span> <a routerLink=\"/\">Fitness Tracker</a></span>\n    <span class=\"example-spacer\"></span>\n    <div>\n       <ul>\n            <li *ngIf=\"!isAuth\"><a routerLink=\"/signup\">sign up</a></li>\n            <li *ngIf=\"!isAuth\"><a routerLink=\"/login\">login</a></li>\n            <li *ngIf=\"isAuth\"><a routerLink=\"/training\">training</a></li>\n            <li *ngIf=\"isAuth\"><a style=\"cursor: pointer\" (click)=\"onLogout()\">log out</a></li>\n      </ul>\n  </div>\n  </mat-toolbar> \n","import { UiService } from './../shared/ui.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { ExcerciseModel } from './excercise.model';\nimport { Subject, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrainingService {\n\n  excerciseChanged = new Subject<ExcerciseModel>();\n  updateExcercise = new Subject<ExcerciseModel[]>();\n  //pastExcercise: ExcerciseModel[] = [];\n  pastExcercise = new Subject<ExcerciseModel[]>();\n  findExcercise: ExcerciseModel;\n  dbSubscription = [];\n // availableExcercise: ExcerciseModel[] = [];\n  availableExcercise = [{ id: 'crunches', name: 'Crunches', duration: 30, calories: 8 },\n  { id: 'touch-toes', name: 'Touch Toes', duration: 180, calories: 15 },\n  { id: 'side-lunges', name: 'Side Lunges', duration: 120, calories: 18 },\n  { id: 'burpees', name: 'Burpees', duration: 60, calories: 8 }]\n\n\n  constructor(private db: AngularFirestore, private uiService: UiService) { }\n\n  fetchAvailableExcercie() {\n    this.uiService.loadingChange.next(true);\n    this.dbSubscription.push(this.db\n      .collection('availableExcercise')\n      .snapshotChanges()\n      .pipe(\n      map(docArray => {\n        return docArray.map(doc => {\n          const data: any = doc.payload.doc.data();\n          return {\n            id: doc.payload.doc.id,\n            name: data.name,\n            calories: data['calories '],\n            duration: data['duration ']\n          }\n        })\n      })\n      ).subscribe(excercises => {\n        this.availableExcercise = excercises;\n        this.updateExcercise.next(excercises);\n        this.uiService.loadingChange.next(false);\n      }));\n  }\n\n  getSelectedExcercise(selectedId: string) {\n    this.findExcercise = this.availableExcercise.find(data => data.id == selectedId);\n    this.excerciseChanged.next({ ...this.findExcercise });\n  }\n\n  cancelExcercise(progress) {\n    this.addDataToDatabase(\n      {\n        ...this.findExcercise,\n        status: 'cancelled',\n        date: new Date(),\n        duration: this.findExcercise.duration * (progress / 100),\n        calories: this.findExcercise.calories * (progress / 100)\n      })\n    this.excerciseChanged.next(null);\n    this.findExcercise = null\n  }\n\n  compeletExcercise() {\n    this.addDataToDatabase(\n      {\n        ...this.findExcercise,\n        status: 'completed',\n        date: new Date()\n      })\n    this.excerciseChanged.next(null);\n    this.findExcercise = null\n  }\n\n  private addDataToDatabase(excercise: ExcerciseModel) {\n    const temp = {\n      ...excercise,\n      date: excercise.date.toISOString(),\n    };\n    this.db.collection('finishedExcercises').add(temp);\n  }\n\n  getFinishedExcercise() {\n    this.dbSubscription.push(this.db.collection('finishedExcercises').valueChanges()\n      .subscribe((res: ExcerciseModel[]) => {\n        this.pastExcercise.next(res);\n      }));\n  }\n\n  cancelSubscription(){\n    this.dbSubscription.forEach(element => {\n      element.unsubscribe();\n    });\n  }\n}\n","import { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TrainingComponent } from './training/training.component';\r\nimport { SignUpComponent } from './auth/sign-up/sign-up.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { AuthGaurd } from './auth/auth-guard';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: WelcomeComponent}\r\n    //lazy loading\r\n    //     { path: 'training', loadChildren: () => import('./training/training.module').then(m =>{\r\n    //     m.TrainingModule\r\n    // })},\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule{}","import { Subject } from 'rxjs';\r\n\r\nexport class UiService{\r\n    loadingChange = new Subject<boolean>();\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { AuthGaurd } from './../auth/auth-guard';\r\nimport { TrainingComponent } from './training.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [\r\n    { path: 'training', component: TrainingComponent, canActivate: [AuthGaurd] }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [AuthGaurd]\r\n})\r\n\r\nexport class TrainingRoutingModule {}"],"sourceRoot":"webpack:///"}